# =============================================================================
# TechPotli HAProxy Configuration
# =============================================================================

global
    # Logging
    log stdout format raw local0 info
    
    # Performance tuning
    maxconn 50000
    nbthread 4
    cpu-map auto:1/1-4 0-3
    
    # Security
    user haproxy
    group haproxy
    daemon
    
    # SSL
    ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256

defaults
    # Logging
    log global
    mode http
    option httplog
    option dontlognull
    option forwardfor
    option http-server-close
    
    # Timeouts
    timeout connect 5000
    timeout client 50000
    timeout server 50000
    timeout http-request 10s
    timeout http-keep-alive 10s
    
    # Error handling
    option redispatch
    retries 3
    
    # Health checks
    option httpchk GET /health
    http-check expect status 200

# =============================================================================
# Frontend: Main HTTP Traffic
# =============================================================================
frontend http_front
    bind *:80
    bind *:443 ssl crt /etc/ssl/techpotli.pem
    
    # Redirect HTTP to HTTPS
    redirect scheme https code 301 if !{ ssl_fc }
    
    # ACLs for routing
    acl is_api path_beg /api
    acl is_auth path_beg /api/v1/auth
    acl is_users path_beg /api/v1/users
    acl is_products path_beg /api/v1/products
    acl is_orders path_beg /api/v1/orders
    acl is_cart path_beg /api/v1/cart
    acl is_payments path_beg /api/v1/payments
    acl is_inventory path_beg /api/v1/inventory
    acl is_notifications path_beg /api/v1/notifications
    acl is_search path_beg /api/v1/search
    
    # Rate limiting
    stick-table type ip size 100k expire 30s store http_req_rate(10s)
    http-request track-sc0 src
    http-request deny deny_status 429 if { sc_http_req_rate(0) gt 100 }
    
    # Security headers
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains"
    
    # Routing based on path
    use_backend auth_service if is_auth
    use_backend user_service if is_users
    use_backend product_service if is_products
    use_backend order_service if is_orders
    use_backend cart_service if is_cart
    use_backend payment_service if is_payments
    use_backend inventory_service if is_inventory
    use_backend notification_service if is_notifications
    use_backend search_service if is_search
    use_backend api_gateway if is_api
    
    # Default backend
    default_backend api_gateway

# =============================================================================
# Backend: Authentication Service
# =============================================================================
backend auth_service
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    # Health check
    option httpchk
    http-check expect status 200
    
    # Servers
    server auth1 user-service:3001 check inter 5s rise 2 fall 3
    server auth2 user-service:3002 check inter 5s rise 2 fall 3
    server auth3 user-service:3003 check inter 5s rise 2 fall 3

# =============================================================================
# Backend: User Service
# =============================================================================
backend user_service
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    # Health check
    option httpchk
    http-check expect status 200
    
    # Servers
    server user1 user-service:3001 check inter 5s rise 2 fall 3
    server user2 user-service:3002 check inter 5s rise 2 fall 3
    server user3 user-service:3003 check inter 5s rise 2 fall 3

# =============================================================================
# Backend: Product Service
# =============================================================================
backend product_service
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    # Health check
    option httpchk
    http-check expect status 200
    
    # Servers
    server product1 product-service:3001 check inter 5s rise 2 fall 3
    server product2 product-service:3002 check inter 5s rise 2 fall 3
    server product3 product-service:3003 check inter 5s rise 2 fall 3

# =============================================================================
# Backend: Order Service
# =============================================================================
backend order_service
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    # Health check
    option httpchk
    http-check expect status 200
    
    # Servers
    server order1 order-service:3001 check inter 5s rise 2 fall 3
    server order2 order-service:3002 check inter 5s rise 2 fall 3
    server order3 order-service:3003 check inter 5s rise 2 fall 3

# =============================================================================
# Backend: Cart Service
# =============================================================================
backend cart_service
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    # Health check
    option httpchk
    http-check expect status 200
    
    # Servers
    server cart1 cart-service:3001 check inter 5s rise 2 fall 3
    server cart2 cart-service:3002 check inter 5s rise 2 fall 3
    server cart3 cart-service:3003 check inter 5s rise 2 fall 3

# =============================================================================
# Backend: Payment Service
# =============================================================================
backend payment_service
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    # Health check
    option httpchk
    http-check expect status 200
    
    # Servers
    server payment1 payment-service:3001 check inter 5s rise 2 fall 3
    server payment2 payment-service:3002 check inter 5s rise 2 fall 3
    server payment3 payment-service:3003 check inter 5s rise 2 fall 3

# =============================================================================
# Backend: Inventory Service
# =============================================================================
backend inventory_service
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    # Health check
    option httpchk
    http-check expect status 200
    
    # Servers
    server inventory1 inventory-service:3001 check inter 5s rise 2 fall 3
    server inventory2 inventory-service:3002 check inter 5s rise 2 fall 3
    server inventory3 inventory-service:3003 check inter 5s rise 2 fall 3

# =============================================================================
# Backend: Notification Service
# =============================================================================
backend notification_service
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    # Health check
    option httpchk
    http-check expect status 200
    
    # Servers
    server notification1 notification-service:3001 check inter 5s rise 2 fall 3
    server notification2 notification-service:3002 check inter 5s rise 2 fall 3
    server notification3 notification-service:3003 check inter 5s rise 2 fall 3

# =============================================================================
# Backend: Search Service
# =============================================================================
backend search_service
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    # Health check
    option httpchk
    http-check expect status 200
    
    # Servers
    server search1 search-service:3001 check inter 5s rise 2 fall 3
    server search2 search-service:3002 check inter 5s rise 2 fall 3
    server search3 search-service:3003 check inter 5s rise 2 fall 3

# =============================================================================
# Backend: API Gateway (Default)
# =============================================================================
backend api_gateway
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    # Health check
    option httpchk
    http-check expect status 200
    
    # Servers
    server gateway1 api-gateway:3000 check inter 5s rise 2 fall 3
    server gateway2 api-gateway:3001 check inter 5s rise 2 fall 3
    server gateway3 api-gateway:3002 check inter 5s rise 2 fall 3

# =============================================================================
# Stats Page
# =============================================================================
listen stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats refresh 10s
    stats show-legends
    stats auth admin:admin123
    
    # Stats ACLs
    acl stats_acl src 0.0.0.0/0
    http-request allow if stats_acl
    http-request deny
